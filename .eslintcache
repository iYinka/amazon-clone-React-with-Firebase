[{"/Users/Yinka/Desktop/amazon-clone/src/App.js":"1","/Users/Yinka/Desktop/amazon-clone/src/reducer.js":"2","/Users/Yinka/Desktop/amazon-clone/src/Header.js":"3","/Users/Yinka/Desktop/amazon-clone/src/Checkout.js":"4","/Users/Yinka/Desktop/amazon-clone/src/Login.js":"5","/Users/Yinka/Desktop/amazon-clone/src/index.js":"6","/Users/Yinka/Desktop/amazon-clone/src/Subtotal.js":"7","/Users/Yinka/Desktop/amazon-clone/src/Home.js":"8","/Users/Yinka/Desktop/amazon-clone/src/CheckoutProduct.js":"9","/Users/Yinka/Desktop/amazon-clone/src/reportWebVitals.js":"10","/Users/Yinka/Desktop/amazon-clone/src/Product.js":"11","/Users/Yinka/Desktop/amazon-clone/src/StateProvider.js":"12","/Users/Yinka/Desktop/amazon-clone/src/firebase.js":"13","/Users/Yinka/Desktop/amazon-clone/src/Payment.js":"14","/Users/Yinka/Desktop/amazon-clone/src/axios.js":"15","/Users/Yinka/Desktop/amazon-clone/src/Orders.js":"16","/Users/Yinka/Desktop/amazon-clone/src/Order.js":"17"},{"size":1981,"mtime":1611272527000,"results":"18","hashOfConfig":"19"},{"size":1345,"mtime":1610413006000,"results":"20","hashOfConfig":"19"},{"size":2546,"mtime":1611269259000,"results":"21","hashOfConfig":"19"},{"size":1389,"mtime":1611269217000,"results":"22","hashOfConfig":"19"},{"size":2151,"mtime":1611269299000,"results":"23","hashOfConfig":"19"},{"size":691,"mtime":1609635369000,"results":"24","hashOfConfig":"19"},{"size":1274,"mtime":1611269368000,"results":"25","hashOfConfig":"19"},{"size":8777,"mtime":1611271560000,"results":"26","hashOfConfig":"19"},{"size":1325,"mtime":1611269238000,"results":"27","hashOfConfig":"19"},{"size":362,"mtime":1609512635000,"results":"28","hashOfConfig":"19"},{"size":1253,"mtime":1611269349000,"results":"29","hashOfConfig":"19"},{"size":472,"mtime":1609635562000,"results":"30","hashOfConfig":"19"},{"size":600,"mtime":1609942439000,"results":"31","hashOfConfig":"19"},{"size":5960,"mtime":1610483757000,"results":"32","hashOfConfig":"19"},{"size":367,"mtime":1611306267000,"results":"33","hashOfConfig":"19"},{"size":957,"mtime":1611269323000,"results":"34","hashOfConfig":"19"},{"size":1104,"mtime":1611269311000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1d6113g",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Yinka/Desktop/amazon-clone/src/App.js",["82","83"],"import React, { useEffect } from \"react\"\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from './Payment'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport Orders from \"./Orders\";\n\n\n\nconst promise = loadStripe('pk_test_51I8A2cLW6jardt62VDtThNBjgd3XFkzqNmqQcFKlgfm1o3BCaULsAy2VI0n59WFhD4sgLJwVtzqAq0UYYzVzowS300x4iX0tTm')\n\n\nfunction App() {\n  const[{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    //will only run once when the app component loads....\n      auth.onAuthStateChanged(authUser => {\n        console.log('THE USER IS >>>>>>', authUser);\n          if (authUser){\n            //the user just logged in OR the user was logged in\n            dispatch({\n              type: 'SET_USER',\n              user: authUser\n            })\n          } else {\n            //user is logged out\n            dispatch({\n              type: 'SET_USER',\n              user: null\n            })\n          }\n      })\n\n  }, [])\n\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/orders\">\n              <Header />\n              <Orders />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/checkout\">\n              <Header />\n              <Checkout />\n            </Route>\n            <Route path=\"/payment\">\n              <Header />\n              <Elements stripe={promise}>\n                <Payment />\n              </Elements>\n            </Route>\n          <Route path=\"/\">\n            <Header />\n              <Home />\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n//BEM convention is all lowercase e.g. in \"app\"\nexport default App;\n",["84","85"],"/Users/Yinka/Desktop/amazon-clone/src/reducer.js",[],["86","87"],"/Users/Yinka/Desktop/amazon-clone/src/Header.js",["88"],"/Users/Yinka/Desktop/amazon-clone/src/Checkout.js",["89"],"import React from 'react'\nimport './Amazon.css'\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from './StateProvider'\nimport Subtotal from './Subtotal'\n\n\n\nfunction Checkout() {\n    const [{ basket, user }, dispatch ] = useStateValue();\n\n\n    return (\n        <div className=\"checkout\">\n            <div className=\"checkout__left\">\n                <img \n                    className=\"checkout__ad\"\n                    src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\n                    alt=\"\"\n                />\n                <div>\n                    <h3>Hello, { user?.email }</h3>\n                    <h2 className=\"checkout__title\">\n                        Your shopping Basket\n                    </h2>\n                    \n                    {basket.map(item => (\n                        <CheckoutProduct\n                            id={item.id}\n                            title={item.title}\n                            image={item.image}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                    ))}\n                    \n                </div>\n            </div>\n            \n            <div className=\"checkout__right\">\n            <Subtotal />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Checkout\n",["90","91"],"/Users/Yinka/Desktop/amazon-clone/src/Login.js",[],["92","93"],"/Users/Yinka/Desktop/amazon-clone/src/index.js",[],"/Users/Yinka/Desktop/amazon-clone/src/Subtotal.js",["94"],"/Users/Yinka/Desktop/amazon-clone/src/Home.js",[],"/Users/Yinka/Desktop/amazon-clone/src/CheckoutProduct.js",["95"],"import React from 'react'\nimport './Amazon.css'\nimport { useStateValue } from './StateProvider'\n\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton}) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const removeFromBasket = () => {\n        //remove item from the basket\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n    }\n    return (\n        <div className=\"checkoutProduct\">\n                <img className=\"checkoutProduct__image\" src={image} alt=\"\"/>\n\n                <div className=\"checkoutProduct__info\">\n                    <p className=\"checkoutProduct__title\">{title}</p>\n                    <p className=\"checkoutProduct__price\">\n                        <small>$</small>\n                        <strong>{price}</strong>\n                    </p>\n                    <div className=\"checkoutProduct__rating\">\n                        {Array(rating)\n                        .fill()\n                        .map((_, i) => (\n                            <p>ðŸŒŸ</p>\n                        ))}\n                </div>\n                \n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\n                )}\n                </div>\n        </div>\n    )\n}\n\nexport default CheckoutProduct\n","/Users/Yinka/Desktop/amazon-clone/src/reportWebVitals.js",[],"/Users/Yinka/Desktop/amazon-clone/src/Product.js",["96","97"],"import React from 'react'\nimport './Amazon.css'\nimport { useStateValue } from './StateProvider';\n\n\n\nfunction Product({id, title, image, price, rating, hideButton}) {\n    const [{ basket, user }, dispatch] = useStateValue();\n    \n    const addToBasket =() => {\n        //dispatch  items into data layer\n        dispatch({\n            type: 'ADD_TO_BASKET',\n            item: {\n                id: id,\n                title: title,\n                image: image,\n                price: price,\n                rating: rating,\n            },\n        });\n    };\n   \n    return (\n        <div className=\"product\">\n           <div className=\"product_info\">\n                <p>{title}</p>\n                <p className=\"product__price\">\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"product__rating\">\n                    {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                        <p>ðŸŒŸ</p>\n                    ))}\n                </div>\n           </div>\n            <img src={image} alt=\"\" /> \n            \n           <button onClick={addToBasket}>Add to Basket</button>        \n        </div>\n    )\n}\n\nexport default Product\n","/Users/Yinka/Desktop/amazon-clone/src/StateProvider.js",[],["98","99"],"/Users/Yinka/Desktop/amazon-clone/src/firebase.js",[],"/Users/Yinka/Desktop/amazon-clone/src/Payment.js",["100"],"import { Link, useHistory } from 'react-router-dom';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from './axios';\nimport React, { useEffect, useState } from 'react'\nimport CurrencyFormat from 'react-currency-format';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css'\nimport { getBasketTotal } from './reducer';\nimport { useStateValue } from './StateProvider'\nimport { db } from './firebase';\n\n\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n    \n    \n    const stripe = useStripe();\n    const elements = useElements();\n\n    \n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\")\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n    \n    \n    useEffect(() => {\n        //Generate special Stripe secret to allow charging customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                //Stripe expects the total in a currency subunit e.g convert $ to cent \n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            \n            setClientSecret(response.data.clientSecret);\n        }\n\n        getClientSecret();\n    }, [basket])\n    \n    console.log('CLIENT SECRET IS >>>>>>', clientSecret)\n    \n    const handleSubmit = async (event) => {\n        //Stripe things\n        event.preventDefault();\n        setProcessing(true);\n        \n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            //paymentIntent = payment confirmation\n            \n            db\n             .collection('users')\n             .doc(user?.uid)\n             .collection('orders')\n             .doc(paymentIntent.id)\n             .set({\n                 basket: basket,\n                 amount: paymentIntent.amount,\n                 created: paymentIntent.created\n                 })\n                //db format here is a NoSQL format\n\n            \n            setSucceeded(true)\n            setError(null)\n            setProcessing(false)\n        \n\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n            \n            \n            history.replace('/orders')\n        })\n    }\n\n    const handleChange = event => {\n        //Listen for changes in CardElement\n        //and display any error as customer types in their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n    \n    \n    \n    return (\n        <div className='payment'>\n            <div className='payment__container'>\n                <h1>\n                    Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\n                </h1>\n            {/* /////////Payment Section - Delivery address/////////// */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div vlassName='Payment__address'>\n                        <p>{user?.email}</p>\n                        <p>Block 157 Flat 5 Jakande Estate</p>\n                        <p>Lagos, Nigeria.</p>\n                    </div>\n                </div>\n\n          {/* //////Payment section - Review items/////// */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className='payment__items'>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n\n            {/* ///////Payment section - Payment method/////////// */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className='payment__details'>\n                        {/* Stripe */}\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange} />\n                            <div classname='payment__priceContainer'>\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>    \n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"$\"}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                            </div>\n                            {/* Error message */}\n                            {error && <div>{ error }</div>}\n                        </form>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n",["101","102"],"/Users/Yinka/Desktop/amazon-clone/src/axios.js",[],"/Users/Yinka/Desktop/amazon-clone/src/Orders.js",["103","104"],"import React, { useEffect, useState } from 'react'\nimport { db } from './firebase';\nimport Order from './Order';\nimport './Amazon.css'\nimport { useStateValue } from './StateProvider';\n\n\nfunction Orders() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n  \n  useEffect(() => {\n    if (user) {\n        db\n          .collection('users')\n          .doc(user?.uid)\n          .collection('orders')\n          .orderBy('created', 'desc')\n          .onSnapshot(snapshot => (\n            setOrders(snapshot.docs.map(doc => ({\n              id: doc.id,\n              data: doc.data()\n            })))\n          ))\n    } else {\n      setOrders([])\n    }\n  }, [user])\n  \n  \n  return (\n    <div className='orders'>\n      <h1>Your Orders</h1>\n      \n      <div className='orders__order'>\n        {orders?.map(order => (\n          <Order order={order} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders\n","/Users/Yinka/Desktop/amazon-clone/src/Order.js",[],{"ruleId":"105","severity":1,"message":"106","line":20,"column":9,"nodeType":"107","messageId":"108","endLine":20,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":41,"column":6,"nodeType":"111","endLine":41,"endColumn":8,"suggestions":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":12,"column":28,"nodeType":"121","messageId":"122","endLine":12,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":10,"column":30,"nodeType":"121","messageId":"122","endLine":10,"endColumn":38},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"120","line":13,"column":24,"nodeType":"121","messageId":"122","endLine":13,"endColumn":32},{"ruleId":"119","severity":1,"message":"127","line":6,"column":14,"nodeType":"121","messageId":"122","endLine":6,"endColumn":20},{"ruleId":"119","severity":1,"message":"127","line":8,"column":14,"nodeType":"121","messageId":"122","endLine":8,"endColumn":20},{"ruleId":"119","severity":1,"message":"128","line":8,"column":22,"nodeType":"121","messageId":"122","endLine":8,"endColumn":26},{"ruleId":"113","replacedBy":"129"},{"ruleId":"115","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":52,"column":15,"nodeType":"121","messageId":"122","endLine":52,"endColumn":22},{"ruleId":"113","replacedBy":"132"},{"ruleId":"115","replacedBy":"133"},{"ruleId":"119","severity":1,"message":"127","line":9,"column":12,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":9,"column":28,"nodeType":"121","messageId":"122","endLine":9,"endColumn":36},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["135"],["136"],["135"],["136"],"'basket' is assigned a value but never used.","'user' is assigned a value but never used.",["135"],["136"],"'payload' is assigned a value but never used.",["135"],["136"],{"desc":"137","fix":"138"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},[1219,1221],"[dispatch]"]